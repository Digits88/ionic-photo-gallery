(function () {
    'use strict';

    /**
     * @ngInject
     */
    function GalleriesCtrl($rootScope, $timeout, $cordovaFileTransfer, $cordovaCamera, $cordovaVibration) {
        var vm = this;
        vm.galleries = [];

        vm.vibrate = function() {
            // Vibrate 100ms
            $cordovaVibration.vibrate(100);
        };

        vm.upload = function() {
            var options = {
                quality : 75,
                destinationType : Camera.DestinationType.FILE_URI,
                sourceType : Camera.PictureSourceType.CAMERA,
                allowEdit : true,
                encodingType: Camera.EncodingType.JPEG,
                popoverOptions: CameraPopoverOptions,
                targetWidth: 100,
                targetHeight: 100,
                saveToPhotoAlbum: false
            };

            //var onFail = function (message) {
            //    alert('Failed because: ' + message);
            //};
            var onSuccess = function() {

            };

            var serverURL = 'http://192.168.0.100:3000';
            var imageURI = 'img/ionic.png';

            var options2 = {
                fileKey: 'image',
                fileName: imageURI.substr(imageURI.lastIndexOf('/') + 1), // We will use the name auto-generated by Node at the server side
                mimeType: 'image/jpeg',
                chunkedMode: false,
                params: { // Whatever you populate options.params with, will be available in req.body at the server-side.
                    userId: '5511e2dd1d5b527364890b32' //$rootScope.me.id
                }
            };

            function upload(imageURI) {
                $cordovaFileTransfer.upload(serverURL + '/images', imageURI, options2)
                    .then(function(result) {
                        console.log("SUCCESS: " + JSON.stringify(result.response));
                        clearCache();
                    }, function(err) {
                        console.log("ERROR: " + JSON.stringify(err));
                        clearCache();
                    }, function (progress) {
                        $timeout(function () {
                            vm.downloadProgress = (progress.loaded / progress.total) * 100;
                        })
                    });
            }

            $cordovaCamera.getPicture(options).then(function(imageURI) {
                console.log("Image has been uploaded " + imageURI);
                upload(imageURI);
            }, function(error) {
                console.error(error);
            });


        };

        function clearCache() {
            $cordovaCamera.cleanup().then(function () {
                console.log('Camera cleanup success.');
            }, function(error) {
                console.error('Failed because: ' + error);
            });
        }
    }

    angular
        .module('app.galleries')
        .controller('GalleriesCtrl', GalleriesCtrl);
})();
